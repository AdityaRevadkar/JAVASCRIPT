// ...... arrays ..... 


let arr1 = [10,2,31,42,5,65,7,8]

 const arr2 = [1,2,3,4,5,6,7,8]

 let arr3 = arr1;
 console.log(arr3, 'this is arr 3')

 const a = 1
 const b = 1

 console.log(a === b, 'a and b equation ')

 console.log(arr3 === arr1)

 let isEqual = arr1 === arr2
 console.log(isEqual) // false


//  1. Push 

 let lengthOfArr = arr1.push(7)

 console.log(arr1)
 console.log(arr1.length)

// 2. pop 

 console.log(arr1.pop(), "pop val")
 console.log(arr1.length)


//  3. slice : It retrun a shallow copy of the array.
 

 let slicedArr = arr1.slice(2,5)
 console.log(slicedArr)

 console.log(arr1 === slicedArr)

// 4. splice


 let splice = arr1.splice(1, 2)
 console.log(splice)




// 5. Sort 

 let orgArr = [1,5,7,3,2,9,8]
 console.log(orgArr, 'org arr BEFORE sorting')


 let ansSorted = orgArr.sort()

 console.log(orgArr, 'org arr AFTER sorting')

 console.log(ansSorted)

 console.log(orgArr === ansSorted, "sorting ")

 let orgArr = [1,5,7,3,2,9,8, 45, 21, 11, 19, 103, 391, 231];

 orgArr.sort((a, b) => a - b ) // ascending order
 orgArr.sort((a, b) => b - a ) // descending order



 console.log(orgArr)


// comparator 
 


//  shift and unshift is just similar to push and pop 
// but shift and unshift does it operation in the start. 
// 6. Shift 



 arr1.shift()



// 7. unshift


 arr1.unshift(0)


